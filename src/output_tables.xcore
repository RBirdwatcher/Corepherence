
package output_tables

import sdd_domains.* 
import C91_Logic.*

class C91 {
 	refers C91_UnionItem  unionOfLayers 

 	op Approach_for_prudential_purposes_domain  Approach_For_Prudential_Purposes()
	{
		unionOfLayers.Approach_For_Prudential_Purposes()
	}


 	op Base_domain  Base()
	{
		unionOfLayers.Base()
	}


 	op Contingent_Scenario_domain  Contingent_Scenario()
	{
		unionOfLayers.Contingent_Scenario()
	}


 	op Delta_Vega_Or_Curvature_Risk_domain  Delta_Vega_Or_Curvature_Risk()
	{
		unionOfLayers.Delta_Vega_Or_Curvature_Risk()
	}


 	op boolean  Hypothetical_Value_Under_Specific_Assumptions()
	{
		unionOfLayers.Hypothetical_Value_Under_Specific_Assumptions()
	}


 	op Instrument_domain  Instrument()
	{
		unionOfLayers.Instrument()
	}


 	op Main_Catagory_domain  Main_Catagory()
	{
		unionOfLayers.Main_Catagory()
	}


 	op Market_Risk_Portfolio_domain  Market_Risk_Portfolio()
	{
		unionOfLayers.Market_Risk_Portfolio()
	}


 	op double  Own_Funds_Requirements()
	{
		unionOfLayers.Own_Funds_Requirements()
	}


 	op Position_In_The_Instrument_domain  Position_In_The_Instrument()
	{
		unionOfLayers.Position_In_The_Instrument()
	}


 	op Prudential_portfolio_domain  Prudential_Portfolio()
	{
		unionOfLayers.Prudential_Portfolio()
	}


 	op double  Sensitivity_To_Delta_Risk_Factors()
	{
		unionOfLayers.Sensitivity_To_Delta_Risk_Factors()
	}


 	op Type_And_Nature_Of_Sensitivity_domain  Type_And_Nature_Of_Sensitivity()
	{
		unionOfLayers.Type_And_Nature_Of_Sensitivity()
	}


 	op Type_Of_Risk_domain  Type_Of_Risk()
	{
		unionOfLayers.Type_Of_Risk()
	}
}
class C91_Table {
	refers  C91_UnionTable  unionOfLayersTable
				contains  C91 [] C91s 
				op  C91 [] calc_C91s() {
					var items = new org.eclipse.emf.common.util.BasicEList<C91>()
				for( C91_UnionItem item : unionOfLayersTable.c91_UnionItems)
				{
					var newItem = Output_tablesFactory.eINSTANCE.createC91
					newItem.unionOfLayers =  item
					items.add(newItem)
				}
				return items
					} 
				op String  init() {
					org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
				 this.c91s.addAll(calc_C91s()) 
 				return null
					}							
} 
